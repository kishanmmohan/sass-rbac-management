services:
  rbac-api:
    container_name: rbac-api
    restart: always
    build:
      context: ./services/rbac-backend
      dockerfile: Dockerfile
    env_file:
      - ./services/rbac-backend/.env
    ports:
      - "8000:8000"
    volumes:
      - "./services/rbac-backend:/usr/src/api/src"
    depends_on:
      rbac-db:
        condition: service_healthy

  rbac-db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGUSER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "mydatabase" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  rbac-cache:
    container_name: rbac-cache
    image: redis:latest
    ports:
      - "6379:6379"

volumes:
  postgres_data: